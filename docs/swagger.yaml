basePath: /api/v1
definitions:
  request.CreateUserRequest:
    properties:
      age:
        maximum: 100
        minimum: 2
        type: integer
      fullname:
        maxLength: 100
        minLength: 2
        type: string
      password:
        maxLength: 100
        minLength: 2
        type: string
      username:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - age
    - fullname
    - password
    - username
    type: object
  request.LoginRequest:
    properties:
      password:
        maxLength: 100
        minLength: 2
        type: string
      username:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - password
    - username
    type: object
  response.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for my project
  title: My API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access & refresh tokens
      parameters:
      - description: Login details
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user by invalidating refresh token
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Logout
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token from cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh Token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration details
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register
      tags:
      - auth
swagger: "2.0"
